version: '3.8'

services:
  mosquitto:
    build:
      context: ./services/mosquitto
      dockerfile: Dockerfile
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"  # Optional: WebSockets MQTT Bridge
    volumes:
      - ./services/mosquitto/mosquitto_data:/mosquitto/data
      - ./services/mosquitto/mosquitto_config:/mosquitto/config
      - ./services/mosquitto/mosquitto_log:/mosquitto/log
    networks:
      - mqtt_network

  nodered:
    image: nodered/node-red
    container_name: nodered
    ports:
      - "1880:1880"  # Assuming Node-RED's default port is 1880
    volumes:
      - ./services/nodered/nodered_data:/data  # Mounting a volume for Node-RED data
    networks:
      - mqtt_network
  mysql:
    image: mysql:latest
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_db
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: password123
    ports:
      - "3306:3306"
    volumes:
      - ./services/mysql/data:/var/lib/mysql
    networks:
      - mqtt_network

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8080:80"
    networks:
      - mqtt_network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - mqtt_network

networks:
  mqtt_network:
